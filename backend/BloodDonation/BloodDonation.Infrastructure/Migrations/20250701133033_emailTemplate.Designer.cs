// <auto-generated />
using System;
using BloodDonation.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BloodDonation.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701133033_emailTemplate")]
    partial class emailTemplate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPost", b =>
                {
                    b.Property<Guid>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogPosts", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPostComment", b =>
                {
                    b.Property<Guid>("BlogPostCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CommentedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("BlogPostCommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogPostComments", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPostLike", b =>
                {
                    b.Property<Guid>("BlogPostLikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LikedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("BlogPostLikeId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId", "PostId")
                        .IsUnique();

                    b.ToTable("BlogPostLikes", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodCompatibility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FromBloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToBloodTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FromBloodTypeId");

                    b.HasIndex("ToBloodTypeId");

                    b.ToTable("BloodCompatibility", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36845a09-6e71-4e7a-a120-c6de13be68dd"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("7dc97071-41a3-44fd-a0c2-474dcbca99b6"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("fc18d3dd-f647-4c37-af3f-d3ba22700f59"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("e4828f0e-9d1b-418a-8415-18ba88dfa7fd"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("c5e3209d-8e4d-472f-a03e-0a5865927027"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("aee2e252-0df3-465b-b47a-440dffaa74d3"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("03c9b3b6-a0af-498b-97be-65c6036eb09a"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("ec9563fd-5e52-45e5-a4ab-a1e662c66154"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("9022f138-4914-4035-933b-d50e8892cd97"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("21656270-f34a-4516-8c4a-38c84d35257c"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("7ac0e114-7c73-48fc-90ff-3292cafd0dab"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("54ad7d83-c0bc-4844-ba13-3d69cfa987e9"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("4c9d6a66-3ca8-4b65-8313-6af760f5ca12"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("394dce79-691d-4365-b883-8d58a8b39910"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("4aaaa9c6-ecaf-478c-b37b-595737cda8c4"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("ea1ab5c7-fb35-4826-9789-8967023a412f"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("7725e8e1-2a32-4881-b7db-b046a1f54583"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("bba6c65e-1270-48ae-ac3a-e521fbcf8edd"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("8f324fb2-6ed0-4701-982c-300bccc2829c"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("ed6c5ed5-abe9-4108-9b3f-a58a6b00b202"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("fa809b2a-d4bc-45fa-973b-68bc2ead5527"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("e04b8207-0286-4988-ae2f-da4f2f55d6d8"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("1f3c5011-05a2-464b-9b72-d8bd52bd97cd"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("b351a395-b7f0-47f2-b190-a638f6ce3301"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("58a54cfe-dddd-4642-af86-1fbefffa0bc8"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("04e110d3-cbff-438f-a468-6f390b30b87e"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("a0b25a37-abcc-4efa-b15e-c0b0011c0d5b"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("e9cbb8b3-bade-4f0d-9186-f6376e18e4ed"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("fd0af34b-5e5a-435c-959b-d98bacfde54a"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("bb469358-86f3-461a-a69d-b38864a07ba2"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("afbab679-9a6e-4334-b79f-137115fa6c93"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("9d1e92f0-1779-4205-b41d-a199a2a557bd"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("9319d9d8-6a33-48fa-87f5-b3f35fb1e6e7"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("e9b16784-23ec-4253-9051-ecfdcc8ecb63"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("599db277-214b-421f-9fb7-c26bbd6c01d7"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("c5a8fabd-f284-4e6a-abc3-198784d73be4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("5322a1c1-4de1-4451-9290-813a2d8b3248"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("ba42496f-60d7-4fc2-b86b-0009d45ad772"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("4eec7d1b-49a6-443e-aa12-a6cc8da0d334"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("0287793d-8744-416b-a583-1bfaf6d2efd4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("ceb59919-8d1a-4d4a-bd5e-e6f9dc72fd5b"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("57cefd15-eb97-407d-9612-8052b0e7f823"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("cc7ac4e2-a514-43f5-b765-28e6302c0443"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("fc93e95a-4ddf-485c-a7cb-cbe2a648c1d1"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("3f403371-382e-4a47-a4c7-f0b129a30803"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("817552ee-f1eb-4643-b29c-28e458f9cb81"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("87e5fa56-6e8f-4cdf-8088-c7f82cba8605"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("7ae5eac4-99c2-4b0c-8569-47f1b32bb65e"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("8d371710-2b10-477e-9e98-2ade6e47ce0d"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("6d69fd76-e65a-4b3a-9cef-5541772aecb2"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("e6dcc965-cb92-4858-80ff-4705729446e5"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("b38b137b-c648-423c-bf85-3c937fa974b4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("a57d4f3a-56ec-4d29-a151-19f55da186c4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("217a78da-1ce6-4a8d-979b-72566e7cd364"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("cce84c82-529b-4903-a282-970d9bb965a5"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("ed18ff5c-cc9f-45e1-a235-4641500cc901"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("049bd12d-ec97-4e24-aae5-7c45f303b829"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("fffc458d-e9ab-472b-99df-7789c69d611a"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("3c7479a3-2242-4ba0-8a22-e29b84b8cd59"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("0106becd-3c5d-4d77-ac50-20b2647c0146"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("1b22c844-343b-4772-84fa-f692dd351eb8"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("e9d97ced-54a5-4dc5-a0bd-30a717434523"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("bf738631-46be-4f0a-a851-5dbea400134c"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("d77b9466-5c89-4f57-84a2-e92b2e1d6bba"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("1f6b1c33-db15-4a8a-9f5e-88ee34991c9b"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("145e12be-4738-4d00-8768-42aade54ebb3"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("8544735c-3ccb-4727-999b-e2a36210fd21"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("99849573-5192-46da-8ed0-a5dbf662dbd7"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("f5d36a78-49ff-40fc-bff5-7574afd2457f"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("85975fbe-7fc2-42a7-81d0-32be01c13cd4"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("e690a16a-1a90-462e-a06a-ce49705a6abf"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("285ebe3f-b8c7-45d3-9d1d-2eef63ba3833"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("89781b8b-f105-420c-840e-436329c82ea7"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("ae4831dd-48a3-42fb-9a47-588b7f8be699"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("525ecce3-a48f-4be8-a73c-74eb4462a801"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("8d4605d7-0e89-43e7-b8cb-03450baaaeef"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("f25d2289-3a46-4ee4-8424-6ff74abd14b8"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("9c3bfcf9-379d-4d67-b21f-6a78409ba9d4"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("ca70b498-99be-42d6-9b44-0adeafdb3dee"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("cc75bc5a-c0e1-4671-a0aa-45c6f0ec013e"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("3bb45dcc-6a9a-476f-803f-13beb74ac885"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("237ac9b6-9741-4770-aa8d-28e5e0c931ab"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("b2343cb4-d474-4b9a-a85b-3208a115a4c2"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("183ea0c7-651e-453d-9c15-9fdd29206ef7"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("ae5cbf10-5898-4d39-8f00-0549eb8ca9e6"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("16531f03-68d1-4912-9889-916a44853504"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("85aff244-4541-4516-bf27-8229e04c3a55"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("48cb6902-b8f9-4193-ac60-18c518646787"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("43cf7d53-72bb-4c28-8e0c-bb4757c67a4a"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("13dd4a9a-60f5-4a12-b476-999d4cd8d407"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("800fa614-d727-4ad6-b612-8a244c18b721"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("8738cfda-7eb5-454b-a97f-c0b8a33c184c"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("c71154a7-260c-4547-ae62-181a83a907b3"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("9e8c0902-88fb-4c80-9b4c-e0e87be1853b"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("c5526e08-91d2-4954-a420-4bc31f6385de"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("6717a315-d820-4d53-9fb7-c57d3e93129f"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("fc2ac222-c8b6-4ef6-a907-293ab487e82e"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("d7e47421-249b-48d5-9d62-c638e00e3c72"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("1077430f-6f65-4ad8-8b67-34f8cc1db8f2"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("20d7d73f-527e-43ae-8043-0889adfb70cb"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("1ad7de40-a6e9-4a2a-bbb5-757e67f8247f"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("b7edf83d-aebf-4146-8977-4b1e2d7939b6"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("49a781c6-ede3-40a9-8c95-ba6a6186adf0"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("49b7fad5-06a1-4900-899c-a330ef4a9449"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("6181c0e7-97c5-4910-8939-42d7ec8817e4"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("314693bc-350a-4389-9841-ce82266bc013"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("7a2d47c6-1164-4a28-b1b5-449dfafaa247"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("e7833271-bec1-4c34-8f84-a9cac37d4d67"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodStored", b =>
                {
                    b.Property<Guid>("StoredId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("StoredId");

                    b.HasIndex("BloodTypeId");

                    b.ToTable("BloodStored", "public");

                    b.HasData(
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000001"),
                            BloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8460),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000002"),
                            BloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8460),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000003"),
                            BloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000004"),
                            BloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000005"),
                            BloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000006"),
                            BloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000007"),
                            BloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000008"),
                            BloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            LastUpdated = new DateTime(2025, 7, 1, 13, 30, 33, 429, DateTimeKind.Utc).AddTicks(8470),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodType", b =>
                {
                    b.Property<Guid>("BloodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("BloodTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BloodTypes", "public");

                    b.HasData(
                        new
                        {
                            BloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            Description = "A positive blood type",
                            Name = "A+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            Description = "A negative blood type",
                            Name = "A-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            Description = "B positive blood type",
                            Name = "B+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            Description = "B negative blood type",
                            Name = "B-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            Description = "AB positive blood type (universal plasma donor)",
                            Name = "AB+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            Description = "AB negative blood type",
                            Name = "AB-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            Description = "O positive blood type (most common)",
                            Name = "O+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            Description = "O negative blood type (universal donor)",
                            Name = "O-"
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationHistory", b =>
                {
                    b.Property<Guid>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConfirmedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Completed");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("DonationId");

                    b.HasIndex("ConfirmedBy");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("DonationsHistory", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationMatch", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ConfirmedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("MatchedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.HasKey("MatchId");

                    b.HasIndex("DonorId");

                    b.HasIndex("RequestId");

                    b.ToTable("DonationMatches", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AmountBlood")
                        .HasColumnType("integer");

                    b.Property<Guid>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Deadline")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmergencyContactName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsEmergency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("RequestId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("DonationRequests", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.EmailTemplates.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "\n                    <!DOCTYPE html>\n                        <html>\n                            <head>\n                                <meta charset=\"UTF-8\" />\n                                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                                <title>Email Template</title>\n                                <link\n                                href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\"\n                                rel=\"stylesheet\"\n                                />\n                            </head>\n                            <body class=\"bg-gray-100\">\n                                <div class=\"max-w-xl mx-auto my-6 bg-white rounded-lg shadow-md\">\n                                <div class=\"bg-blue-500 text-white text-center py-4 rounded-t-lg\">\n                                    <h1 class=\"text-xl font-bold\">{{header}}</h1>\n                                </div>\n                                <div class=\"p-6 text-center\">\n                                    <p class=\"text-gray-800 text-base\">Hello <b>{{username}}</b>,</p>\n                                    <p class=\"text-gray-700 mt-4\">{{content}}</p>\n                                </div>\n                                <div class=\"bg-gray-100 text-center py-3 rounded-b-lg\">\n                                    <p class=\"text-gray-500 text-xs\">\n                                        © {{year}} Blood Donation. All rights reserved.\n                                    </p>\n                                    <p>\n                                        <a href=\"{{website_link}}\" class=\"text-blue-500 text-xs\"\n                                            >Visit our website</a\n                                        >\n                                    </p>\n                                </div>\n                            </div>\n                        </body>\n                    </html>",
                            Header = "Template 1",
                            MainContent = "Main 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "\n                    <!DOCTYPE html>\n                        <html>\n                            <head>\n                                <meta charset=\"UTF-8\" />\n                                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n                                <title>Email Template</title>\n                                <link\n                                href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\"\n                                rel=\"stylesheet\"\n                                />\n                            </head>\n                            <body class=\"bg-gray-100\">\n                                <div class=\"max-w-xl mx-auto my-6 bg-white rounded-lg shadow-md\">\n                                <div class=\"bg-blue-500 text-white text-center py-4 rounded-t-lg\">\n                                    <h1 class=\"text-xl font-bold\">{{header}}</h1>\n                                </div>\n                                <div class=\"p-6 text-center\">\n                                    <p class=\"text-gray-800 text-base\">Hello <b>{{username}}</b>,</p>\n                                    <p class=\"text-gray-700 mt-4\">{{content}}</p>\n                                </div>\n                                <div class=\"bg-gray-100 text-center py-3 rounded-b-lg\">\n                                    <p class=\"text-gray-500 text-xs\">\n                                        © {{year}} Blood Donation. All rights reserved.\n                                    </p>\n                                    <p>\n                                        <a href=\"{{website_link}}\" class=\"text-blue-500 text-xs\"\n                                            >Visit our website</a\n                                        >\n                                    </p>\n                                </div>\n                            </div>\n                        </body>\n                    </html>",
                            Header = "Template 2",
                            MainContent = "Main 2"
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.HasKey("AnswerId");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.ToTable("HealthAnswers", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.Property<Guid>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("ApprovedByStaffName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("FormId");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("UserId");

                    b.ToTable("HealthForms", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("QuestionId");

                    b.ToTable("HealthQuestions", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.DonorInformation", b =>
                {
                    b.Property<Guid>("DonorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("LastChecked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MedicalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DonorInfoId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DonorInformation", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid?>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsDonor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastDonationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Active");

                    b.HasKey("UserId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPost", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("BlogPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPostComment", b =>
                {
                    b.HasOne("BloodDonation.Domain.BlogPost.BlogPost", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("BlogPostComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPostLike", b =>
                {
                    b.HasOne("BloodDonation.Domain.BlogPost.BlogPost", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("BlogPostLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodCompatibility", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "FromBloodType")
                        .WithMany("CompatibleFrom")
                        .HasForeignKey("FromBloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "ToBloodType")
                        .WithMany("CompatibleTo")
                        .HasForeignKey("ToBloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromBloodType");

                    b.Navigation("ToBloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodStored", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationHistory", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "ConfirmedByUser")
                        .WithMany("ConfirmedDonations")
                        .HasForeignKey("ConfirmedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Donations.DonationRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "Donor")
                        .WithMany("DonationHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConfirmedByUser");

                    b.Navigation("Donor");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationMatch", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "Donor")
                        .WithMany("DonationMatches")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Donations.DonationRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationRequest", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("DonationRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BloodType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthAnswer", b =>
                {
                    b.HasOne("BloodDonation.Domain.QuestionForm.HealthForm", "Form")
                        .WithMany("Answers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.QuestionForm.HealthQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "ApprovedByStaff")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("HealthForms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedByStaff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.DonorInformation", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithOne("DonorInformation")
                        .HasForeignKey("BloodDonation.Domain.Users.DonorInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.RefreshToken", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId");

                    b.Navigation("BloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPost", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodType", b =>
                {
                    b.Navigation("CompatibleFrom");

                    b.Navigation("CompatibleTo");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.Navigation("BlogPostComments");

                    b.Navigation("BlogPostLikes");

                    b.Navigation("BlogPosts");

                    b.Navigation("ConfirmedDonations");

                    b.Navigation("DonationHistories");

                    b.Navigation("DonationMatches");

                    b.Navigation("DonationRequests");

                    b.Navigation("DonorInformation");

                    b.Navigation("HealthForms");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
