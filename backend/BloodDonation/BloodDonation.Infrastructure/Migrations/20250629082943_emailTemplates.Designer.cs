// <auto-generated />
using System;
using BloodDonation.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BloodDonation.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250629082943_emailTemplates")]
    partial class emailTemplates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPost", b =>
                {
                    b.Property<Guid>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogPosts", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodCompatibility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FromBloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ToBloodTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FromBloodTypeId");

                    b.HasIndex("ToBloodTypeId");

                    b.ToTable("BloodCompatibility", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86c4862a-05d4-443d-bbc0-966f1032b5ca"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("a608d1c8-7265-4ae0-a0d0-e2da8c6a0bf3"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("1de1530e-1f41-45ae-ac61-c202bc9d57ec"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("bc72fe4a-13c5-40da-ae0d-6ce23c74a946"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("20af5e78-6e7e-4b93-8ab7-d602b8f33c55"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("d4414890-ee16-4df6-9896-1f6e31952b27"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("a9861ba5-4643-42d6-a038-517c7926fb43"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("b13ec885-b50a-49e1-90f9-a7f55cedbefa"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("56b020eb-cd16-4c26-bdba-fc82d7511864"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("f83327c6-0eac-47b3-901e-47f52cb2bb93"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("e81f1c9e-2d56-4411-be50-61d7895e9ed8"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("0592cc7f-230e-449c-bd07-cb1cde8b5e78"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("b55e0209-cdef-445c-b136-dfad41e0f952"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("94fc7e1f-a1d3-45dd-9a93-295808fcc3db"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("036fc2ce-38b5-4088-bfa8-2b2cb4cb6570"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("2e8a31bd-08a4-4393-8643-dc55c45d53d9"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("ae15d621-82a6-403e-abcd-df11a2b8a5bb"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("194b053a-658a-4296-86a7-10d0eb980a73"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("4decbb33-9e5a-4c18-8488-6e532e756ebc"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("c5f8e3b4-a0b4-4adb-92b7-4d197793ea39"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("af90a177-6419-4bd0-bcac-f1979e6ceba6"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("3acda376-a073-4830-8e54-2e73e4be56d8"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("525a82b0-643f-4eaa-9278-938c09e168b7"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("3138f3ed-a33d-44a8-82d5-5c8d404a99a2"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("7ceb7fa5-1199-4c61-bf85-2aaba9a6dbbd"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("cd3fd9ee-7594-474a-9e86-6d07126ea798"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("2c32c351-7189-4900-a7aa-4934f7c0522b"),
                            ComponentType = "RBC",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("43e17f23-55e9-4017-9074-8504440472e4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("09c10bb6-ce15-4940-b018-8df0105b8a27"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("51219ece-2314-4003-b61a-549cd5972f1e"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("a9795133-032d-409c-b93c-d21a9b241d45"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("d08d6c07-eb14-4c8d-98fa-b81b19ea6bcc"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("e9496b0a-f496-4186-96a9-bbf1687055ac"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("8b661404-b2ae-496e-86e7-6cfab5c85276"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("1daa6d9a-cea7-41df-8865-197cc7e43abf"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("95953aab-76c3-48c6-baca-8cd300b4c9f5"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("e08e1284-c6fc-414e-8632-ddddbba748d6"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("bc2d783c-b9e7-499e-830b-83d2acbdce9c"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("e949d55a-baf4-43db-b4a8-fba45fda4bb0"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("6a1f5b05-d208-48c7-9cfb-3e9acf1495e4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("b902b03b-634b-49bc-80ce-7cbda5ed3c49"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("1f48c123-3e39-40cc-916b-630e88f5684f"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("a3287b05-663b-482d-afff-054660c62db4"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("4334052d-0dd4-4778-9c1a-1ca6d18ce09d"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("f48fba9a-5efc-41a9-a6bb-852ed9ec734b"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("e621487d-b921-4014-9bde-455c715d6bb0"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("5d0f93ee-3203-41b0-8316-566121481c24"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("919d218c-c0df-422b-b3f4-d17f6817d91c"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("81dcb0e7-8da8-4663-a5b5-90f9196a72c2"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("b82159c7-ab08-4406-8c46-789895ec8ce1"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("92adb701-55ac-4230-944e-39d9dd4409b3"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("c110c5d5-afeb-445c-b8bc-c200f137ab1f"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("263c8880-1039-4501-908c-b12cee67fb03"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("0d2c5aa6-f5a3-40db-b203-e4185bc18b9a"),
                            ComponentType = "Whole",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("55a47e18-62bc-47a2-8f78-e07e6bad6806"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("294de970-73ac-4841-a920-1f3aca60dc3b"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("39afda11-f960-4073-b6d0-43a7c3feb566"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("ed135a10-f368-43dc-8cb4-00d68f56f034"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("380cdd4c-daec-4350-8518-84920bd69e9f"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("aae8cbb5-6ba5-4396-b5a3-17e5835f67b5"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("e9a74a1b-8578-400d-9c98-161f02909181"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("0a13223f-ee43-4e84-968a-64a076a1843f"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("84ce0769-b24c-46a9-a364-04bd430c248f"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("a88d7429-867d-4d96-a7c5-45f047856920"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("f43e1a28-ce32-4efc-a36d-cdd5a84fb2d3"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("79252d62-5aac-4fa0-a5df-32ff91699f1a"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("d26d2a69-be6d-4e27-9f13-57fdd2e825f4"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("b3b9faf3-844a-4bc7-bbb2-0b2758d211af"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("5c870b9a-d5ed-4628-9d01-14618781233a"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("12597c5f-144a-40c0-ad2a-ec87c2a933f9"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("179aee76-c6c9-4f99-928b-c7ac7557249a"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("050e4795-6fcc-4360-8bf7-beed479587bb"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("d810b8b4-4ee2-44bc-b581-d6f6db00afdb"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("f8f245c4-d115-43b8-9be3-a8b661334e07"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("e962bc2d-eb0b-4aff-9772-b8870a97cecd"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("9322ffb9-2566-4e5b-8298-a145e83a1be3"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("83d56eb3-3124-432c-96c1-507b834f4c84"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("d898dbda-905a-47a3-96cf-f11e3d7ba2c7"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("311f9bc0-40ce-4284-a1d4-d991eb2a05fb"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("d4da12de-d33d-48e3-b58a-de2f9d16fb7c"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("8afb5bb9-fdbb-4be3-ae31-3244e7f8b1fb"),
                            ComponentType = "Plasma",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("2c21c78c-dfd1-430a-8245-c15e74e342c4"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79")
                        },
                        new
                        {
                            Id = new Guid("fdfb2f9f-f91f-4b92-9853-bcdb692c6ea4"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("1756e11b-eb00-4fc1-b83d-4085fcc1856f"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("650d213b-5ab2-4420-8a08-909e3e9c6dcf"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("8e535286-dd60-4813-a00d-dc1264159430"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("f26a3d40-3c7b-4fb1-824a-d3571f259ef7"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("e8d9b7b3-8359-44bd-b5d9-6fd0666d9b78"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("b68bf88c-ee9b-4f98-80e2-6b3942c6f242"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("9731bdf9-3629-4f0f-a39c-65f223cc1439"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c")
                        },
                        new
                        {
                            Id = new Guid("38575dac-a470-4e7c-a6ec-1e0e38f7dbdf"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("e20199b3-7ce4-451d-b9d1-c2fb53f11620"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("b7a6f7dd-1619-4e2d-bdd9-56fe23ee97ff"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("b8a709d6-114d-4406-b355-6d1d641f0e9c"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845")
                        },
                        new
                        {
                            Id = new Guid("01866f98-703b-4715-837b-e04c69ab77fb"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("1f773fa6-d949-4cc5-9994-61557c0ac874"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("783230e9-c357-4fda-a396-fb3a17786b02"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("90f20224-b7ef-47c2-b141-06d778444502"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1")
                        },
                        new
                        {
                            Id = new Guid("a81477ec-21d8-4dd4-991b-37362b0ce8cd"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("9ddd2e84-1f79-417f-966e-e6a6d4d10cc6"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7")
                        },
                        new
                        {
                            Id = new Guid("3e14e2fe-76e7-4727-99bb-29695ab6258a"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("37bc553a-f6a1-4874-9d35-93942ad1e71b"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("e60652c0-bec7-42ac-a914-a299a795ac2b"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("d5b90516-c75e-44d3-8d04-76e83d48991c"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7")
                        },
                        new
                        {
                            Id = new Guid("6b0a8d27-d070-4096-ac94-e344f300d758"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("3bc1face-af05-47bd-be23-73f5a26658ab"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1")
                        },
                        new
                        {
                            Id = new Guid("c2381edd-0c42-4c8a-a819-0ff69f8caacb"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        },
                        new
                        {
                            Id = new Guid("193dd65d-5136-433e-b675-a1a66023798f"),
                            ComponentType = "Platelet",
                            FromBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            ToBloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f")
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodStored", b =>
                {
                    b.Property<Guid>("StoredId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("StoredId");

                    b.HasIndex("BloodTypeId");

                    b.ToTable("BloodStored", "public");

                    b.HasData(
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000001"),
                            BloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000002"),
                            BloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000003"),
                            BloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000004"),
                            BloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000005"),
                            BloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7470),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000006"),
                            BloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7480),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000007"),
                            BloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7480),
                            Quantity = 0
                        },
                        new
                        {
                            StoredId = new Guid("10000000-0000-0000-0000-000000000008"),
                            BloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            LastUpdated = new DateTime(2025, 6, 29, 8, 29, 42, 837, DateTimeKind.Utc).AddTicks(7480),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodType", b =>
                {
                    b.Property<Guid>("BloodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("BloodTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BloodTypes", "public");

                    b.HasData(
                        new
                        {
                            BloodTypeId = new Guid("2b0f96e4-9052-4d68-a937-9adfc9d231d1"),
                            Description = "A positive blood type",
                            Name = "A+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("0f5f77fb-2bd4-4aeb-9bd4-bb56745c8845"),
                            Description = "A negative blood type",
                            Name = "A-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("91baf3d9-759f-4bb8-82a4-3d9d645d91b7"),
                            Description = "B positive blood type",
                            Name = "B+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("82f33bfb-7fa4-432e-8735-1c0e5c2f99f7"),
                            Description = "B negative blood type",
                            Name = "B-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("edc95a1c-0c3f-4a61-a104-f949109e7c0f"),
                            Description = "AB positive blood type (universal plasma donor)",
                            Name = "AB+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("1479d6c3-0c85-4cb7-a2c4-894c35e21eb1"),
                            Description = "AB negative blood type",
                            Name = "AB-"
                        },
                        new
                        {
                            BloodTypeId = new Guid("b160fa12-dfa5-44c7-a179-6ef0f3c7c28c"),
                            Description = "O positive blood type (most common)",
                            Name = "O+"
                        },
                        new
                        {
                            BloodTypeId = new Guid("62ef305e-755a-4651-9ed7-6fc4b4061e79"),
                            Description = "O negative blood type (universal donor)",
                            Name = "O-"
                        });
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationHistory", b =>
                {
                    b.Property<Guid>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConfirmedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Completed");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("DonationId");

                    b.HasIndex("ConfirmedBy");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("DonationsHistory", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationMatch", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ConfirmedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DonorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("MatchedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.HasKey("MatchId");

                    b.HasIndex("DonorId");

                    b.HasIndex("RequestId");

                    b.ToTable("DonationMatches", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AmountBlood")
                        .HasColumnType("integer");

                    b.Property<Guid>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Deadline")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmergencyContactName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsEmergency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("RequestId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("DonationRequests", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.EmailTemplates.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthAnswer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.HasKey("AnswerId");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.ToTable("HealthAnswers", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.Property<Guid>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("ApprovedByStaffName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("FormId");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("UserId");

                    b.ToTable("HealthForms", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthQuestion", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("QuestionId");

                    b.ToTable("HealthQuestions", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.DonorInformation", b =>
                {
                    b.Property<Guid>("DonorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("LastChecked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MedicalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DonorInfoId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DonorInformation", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid?>("BloodTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsDonor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastDonationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Active");

                    b.HasKey("UserId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", "public");
                });

            modelBuilder.Entity("BloodDonation.Domain.BlogPost.BlogPost", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("BlogPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodCompatibility", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "FromBloodType")
                        .WithMany("CompatibleFrom")
                        .HasForeignKey("FromBloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "ToBloodType")
                        .WithMany("CompatibleTo")
                        .HasForeignKey("ToBloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromBloodType");

                    b.Navigation("ToBloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodStored", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationHistory", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "ConfirmedByUser")
                        .WithMany("ConfirmedDonations")
                        .HasForeignKey("ConfirmedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Donations.DonationRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "Donor")
                        .WithMany("DonationHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConfirmedByUser");

                    b.Navigation("Donor");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationMatch", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "Donor")
                        .WithMany("DonationMatches")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Donations.DonationRequest", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Donor");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BloodDonation.Domain.Donations.DonationRequest", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("DonationRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BloodType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthAnswer", b =>
                {
                    b.HasOne("BloodDonation.Domain.QuestionForm.HealthForm", "Form")
                        .WithMany("Answers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloodDonation.Domain.QuestionForm.HealthQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "ApprovedByStaff")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("HealthForms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovedByStaff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.DonorInformation", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithOne("DonorInformation")
                        .HasForeignKey("BloodDonation.Domain.Users.DonorInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.RefreshToken", b =>
                {
                    b.HasOne("BloodDonation.Domain.Users.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.HasOne("BloodDonation.Domain.Bloods.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId");

                    b.Navigation("BloodType");
                });

            modelBuilder.Entity("BloodDonation.Domain.Bloods.BloodType", b =>
                {
                    b.Navigation("CompatibleFrom");

                    b.Navigation("CompatibleTo");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthForm", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BloodDonation.Domain.QuestionForm.HealthQuestion", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("BloodDonation.Domain.Users.User", b =>
                {
                    b.Navigation("BlogPosts");

                    b.Navigation("ConfirmedDonations");

                    b.Navigation("DonationHistories");

                    b.Navigation("DonationMatches");

                    b.Navigation("DonationRequests");

                    b.Navigation("DonorInformation");

                    b.Navigation("HealthForms");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
